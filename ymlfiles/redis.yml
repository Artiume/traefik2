version: "3.7"
services:

## Redis - Key-value Store

  ## Fix THP issues:
    # sudo -i
    # echo never > /sys/kernel/mm/transparent_hugepage/enabled
    # exit
    # sudo sysctl vm.overcommit_memory=1

  # Add this to rc.local file to persist changes after reboot:
  # Ubuntu 18.04 doesn't contain rc.local file so we need to create it:
    # sudo nano /etc/rc.local
  # Paste the following:

  # #!/bin/sh -e
  # #
  # # rc.local
  # #
  # # This script is executed at the end of each multiuser runlevel.
  # # Make sure that the script will "exit 0" on success or any other
  # # value on error.
  # #
  # # In order to enable or disable this script just change the execution
  # # bits.
  # #
  # # By default this script does nothing.
  #
  # echo never > /sys/kernel/mm/transparent_hugepage/enabled
  # sysctl vm.overcommit_memory=1
  #
  # exit 0

  # Save and exit
  # Now make the file executable:
  # sudo chmod +x /etc/rc.local

  ##Customize config - OPTIONAL
    # mkdir -p $USERDIR/docker/redis/config
    # docker run --rm --entrypoint cat redis /usr/local/etc/redis/redis.conf > $USERDIR/docker/redis/config/redis.conf
    # Mount to /usr/local/etc/redis/redis.conf

  redis:
    container_name: redis
    image: redis
    restart: always
    entrypoint: redis-server --appendonly yes
    networks:
      - traefik_proxy
#    ports:
#      - "6379:6379"
    sysctls:
      net.core.somaxconn: '65535'
    volumes:
      - $USERDIR/docker/redis/data:/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## TCP
      - traefik.tcp.routers.redis.entrypoints=redis-port
      - traefik.tcp.routers.redis.tls=true
      - traefik.tcp.routers.redis.rule=HostSNI(`*`)
      - traefik.tcp.routers.redis.service=redis
      - traefik.tcp.services.redis.loadbalancer.server.port=6379

## Redis Commander - Redis Management Tool
  rediscommander:
    container_name: rediscommander
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    networks:
      - traefik_proxy
#    ports:
#      - "8081:8081"
    environment:
      - REDIS_HOST=redis
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.rediscommander.entrypoints=https
      - traefik.http.routers.rediscommander.rule=Host(`rediscommander.$DOMAINNAME`)
      - traefik.http.routers.rediscommander.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.rediscommander.middlewares=rediscommander-headers
      - traefik.http.middlewares.rediscommander-headers.headers.SSLHost=rediscommander.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.rediscommander.middlewares=secure-chain@file
      ## Services
      - traefik.http.routers.rediscommander.service=rediscommander
      - traefik.http.services.rediscommander.loadbalancer.server.port=8081

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
