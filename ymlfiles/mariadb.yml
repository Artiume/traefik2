version: "3.7"
services:

## Mariadb â€“ Database Server

  ## Suggested procedure to create new databases:
  ## Replace <these values>
    # docker exec -it mariadb mysql -uroot -p$MYSQL_ROOT_PASSWORD
    # CREATE DATABASE <database name> CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;
    # GRANT ALL PRIVILEGES ON <database name>.* TO '<user>'@'<container>.traefik_proxy' IDENTIFIED BY '<password>';
    # FLUSH PRIVILEGES;
    # exit

  ## Create a custom.cnf:
    # Start the container to create the initial files, then stop the container and remove all but the custom.cnf.
      # rm -R $USERDIR/docker/mariadb/databases
      # rm -R $USERDIR/docker/mariadb/log
    # Add the following to $USERDIR/docker/mariadb/custom.cnf under the [mysqld] section:
      # character_set_server=utf8mb4
      # collation_server=utf8mb4_unicode_ci
      # innodb_file_format=Barracuda
    # Start container
  ## Some resources for why these commands are chosen:
  ## utf8mb4 is the most universal and up to date character set allowing for emojis among other benefits
  ## utf8mb4_unicode_ci is the "standard" database type while general_ci is a simplified version which tried to improve speed before modern computing. I believe there is little to no benefit to use the simpler version.
  ## https://docs.nextcloud.com/server/16/admin_manual/configuration_database/mysql_4byte_support.html
  ## For a complete list of available options: docker run -it --rm mariadb --verbose --help
  ## Check your database variables, for example:
    # docker exec -it mariadb mysql -uroot -p$MYSQL_ROOT_PASSWORD
    # SHOW VARIABLES LIKE 'character_set_server';
    # SHOW VARIABLES LIKE '%server%';
    # SHOW VARIABLES LIKE 'innodb%';
    # exit

  ## Delete the initial default databases and secure MySQL:
  ## NOTE: Accept all options except for 'Disallow root login remotely'. Answer no due to docker networking.
    # docker exec -it mariadb /usr/bin/mysql_secure_installation

  mariadb:
    container_name: mariadb
    image: linuxserver/mariadb
    restart: always
    networks:
      - traefik_proxy
#    ports:
#      - "3306:3306"
    volumes:
      - $USERDIR/docker/mariadb:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## TCP
      - traefik.tcp.routers.mariadb.entrypoints=mariadb-port
      - traefik.tcp.routers.mariadb.tls=true
      - traefik.tcp.routers.mariadb.rule=HostSNI(`*`)
      - traefik.tcp.routers.mariadb.service=mariadb
      - traefik.tcp.services.mariadb.loadbalancer.server.port=3306

## phpMyAdmin - WebUI for MariaDB
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - mariadb
    networks:
      - traefik_proxy
#    ports:
#      - "80:80"
    environment:
#      - PMA_ARBITRARY=1 # Allows you to enter a database server hostname on login form
      - PMA_HOST=mariadb
      - PMA_USER=root
      - PMA_PASSWORD=$MYSQL_ROOT_PASSWORD
      - PMA_ABSOLUTE_URI=https://phpmyadmin.$DOMAINNAME
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.phpmyadmin.entrypoints=https
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.$DOMAINNAME`)
      - traefik.http.routers.phpmyadmin.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-headers
      - traefik.http.middlewares.phpmyadmin-headers.headers.SSLHost=phpmyadmin.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.phpmyadmin.middlewares=test-headers@file
      ## Services
      - traefik.http.routers.phpmyadmin.service=phpmyadmin
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
