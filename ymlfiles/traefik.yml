# Need to start the traefik network before running:
  # docker network create traefik_proxy
# Trail logs using (docker logs -f traefik). Change "traefik" to name of container you want to trail

version: "3.7"
services:

## Traefik - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:v2.0.0-rc2
    restart: always
    networks:
      traefik_proxy:
        ipv4_address: 192.168.1.252
#      - traefik_proxy
#    ports:
#      - "80:80"
#      - "443:443"
#      - "8080:8080"
    volumes:
      - $TRAEFIK2DIR/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
#      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
#      - "traefik.http.routers.api.service=api@internal"
      ## HTTPS entrypoint
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)
      - traefik.http.routers.traefik.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.traefik.middlewares=traefik-headers
      - traefik.http.middlewares.traefik-headers.headers.SSLHost=traefik.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.traefik.middlewares=secure.headers@file
      ## Services
      - traefik.http.routers.traefik.service=traefik
      - traefik.http.services.traefik.loadbalancer.server.port=8080

#      - traefik.tcp.routers.1traefik.entrypoints=https
#      - traefik.tcp.routers.1traefik.tls=true
#      - traefik.tcp.routers.1traefik.rule=HostSNI(`traefik.$DOMAINNAME`)
#      - traefik.tcp.routers.1traefik.tls.certresolver=cloudflare
#      - traefik.tcp.routers.1traefik.service=1traefik
#      - traefik.tcp.services.1traefik.loadbalancer.server.port=8080


networks:
  traefik_proxy:
    external:
      name: traefik_proxy
